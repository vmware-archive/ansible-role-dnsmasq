#
# Copyright 2015 VMware, Inc.  All rights reserved.
# SPDX-License-Identifier: Apache-2.0 OR GPL-3.0-only
#
---
- name: setup main configuration file
  template: src=dnsmasq.conf.j2 dest=/etc/dnsmasq.conf mode=0644
  notify:
    - restart dnsmasq

- name: make sure the extra config directory exists
  file: dest={{ dnsmasq_etc_path }} state=directory recurse=yes mode=0755

- name: setup resolver forwards
  template: src=resolv.dnsmasq.j2 dest={{ dnsmasq_etc_path }}/resolv.dnsmasq mode=0644
  notify:
    - restart dnsmasq
  when: dnsmasq_nameservers is defined and dnsmasq_nameservers

- name: make sure the dhcp hosts directory exists
  file: dest={{ dnsmasq_dhcp_hosts_dir }} state=directory recurse=yes mode=0755

- name: setup /etc/ethers if it does not exist
  file: dest=/etc/ethers owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} state=touch mode=0644
  notify:
    - restart dnsmasq
  when: dnsmasq_dhcp_networks is defined

- name: setup dhcp (static) reservations
  template: src=dhcp-hosts.j2 dest="{{ dnsmasq_dhcp_hosts_dir }}/ansible-managed" mode=0644
  notify:
    - restart dnsmasq
  when: dnsmasq_dhcp_networks is defined

- name: make sure the additional hosts config directory exists
  file: dest={{ dnsmasq_etc_path }}/hosts state=directory recurse=yes mode=0755

- name: setup additional hosts dnsmasq configuration file
  template: src=addn-hosts.j2 dest={{ dnsmasq_etc_path }}/hosts/hosts.ansible mode=0644
  notify:
    - restart dnsmasq
  when: dnsmasq_additional_hosts is defined

#--- tftp services
- name: setup the tftp pxeboot directory
  file: dest="/tftp/pxeboot" state=directory owner=root group=root recurse=yes mode=0755
  notify:
    - restart dnsmasq
    - enable webroot
    - restart web server
  when: dnsmasq_enable_tftp

- name: setup the tftp webroot directory
  file: dest="/tftp/webroot" state=directory owner=root group=root recurse=yes mode=0755
  notify:
    - restart dnsmasq
    - enable webroot
    - restart web server
  when: dnsmasq_enable_tftp

# Note: At the next upgrade of this role, all vhosts may be
# created as part of the apache role vhost setup. We are
# looking at that rather than disparate setups all in various
# disparate roles.
- name: setup the tftp webroot
  template:
    src: tftp/webroot.j2
    dest: /etc/apache2/sites-available/tftp.conf
    owner: root
    group: root
  notify:
    - restart dnsmasq
    - enable webroot
    - restart web server
  when: dnsmasq_enable_tftp and (ansible_os_family == 'Debian')

- name: setup the tftp index page
  template:
    src: tftp/webroot_index.j2
    dest: /tftp/webroot/index.html
    owner: root
    group: root
  when: dnsmasq_enable_tftp

- name: get stats on existing pxelinux.0
  stat:
    path: "/tftp/pxeboot/pxelinux.0"
    get_checksum: yes
    get_md5: no
  register: pxelinux
  when: dnsmasq_enable_tftp

- name: get stats on existing system pxelinux.0
  stat:
    path: "/usr/lib/syslinux/pxelinux.0"
    get_checksum: yes
    get_md5: no
  register: syspxelinux
  when: dnsmasq_enable_tftp

- name: copy pxelinux bootstrap to tftp root folder
  command: "cp /usr/lib/syslinux/pxelinux.0 /tftp/pxeboot/"
  args:
    creates: "/tftp/pxeboot/pxelinux.0"
  when: dnsmasq_enable_tftp and (not pxelinux.stat.exists or (pxelinux.stat.checksum != syspxelinux.stat.checksum))

- name: get stats on existing vesamenu.c32
  stat:
    path: "/tftp/pxeboot/vesamenu.c32"
    get_checksum: yes
    get_md5: no
  register: vesamenu
  when: dnsmasq_enable_tftp

- name: get stats on existing system vewamenu.c32
  stat:
    path: "/usr/lib/syslinux/vesamenu.c32"
    get_checksum: yes
    get_md5: no
  register: sysvesamenu
  when: dnsmasq_enable_tftp

- name: copy vesamenu bootstrap to tftp root folder
  command: "cp /usr/lib/syslinux/vesamenu.c32 /tftp/pxeboot/"
  args:
    creates: "/tftp/pxeboot/vesamenu.c32"
  when: dnsmasq_enable_tftp and (not vesamenu.stat.exists or (vesamenu.stat.checksum != sysvesamenu.stat.checksum))

- name: create pxelinux.cfg directory
  file: dest="/tftp/pxeboot/pxelinux.cfg" state=directory mode=0755
  when: dnsmasq_enable_tftp

- name: create pxe boot configuration file
  template:
    src: "tftp/default.j2"
    dest: "/tftp/pxeboot/pxelinux.cfg/default"
    mode: 0644
  when: dnsmasq_enable_tftp

- name: create pxe boot menu
  template:
    src: "tftp/pxe.conf.j2"
    dest: "/tftp/pxeboot/pxelinux.cfg/pxe.conf"
    mode: 0644
  when: dnsmasq_enable_tftp

- name: create pxelinux.cfg/conf directory
  file: dest="/tftp/pxeboot/pxelinux.cfg/conf" state=directory mode=0755
  when: dnsmasq_enable_tftp

- name: create interactive install menu
  template:
    src: "tftp/interactive.menu.j2"
    dest: "/tftp/pxeboot/pxelinux.cfg/conf/Interactive.menu"
    mode: 0644
  when: dnsmasq_enable_tftp

- name: create scripted install menu
  template:
    src: "tftp/scripted.menu.j2"
    dest: "/tftp/pxeboot/pxelinux.cfg/conf/Scripted.menu"
    mode: 0644
  when: dnsmasq_enable_tftp

#--- enable the service
- name: enable dnsmasq service
  service: name=dnsmasq state=started enabled=True
